<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<general>
		<!--
		URL/IP address of the communication server. If not set, the application exits.
		-->
		<server>vicinity.bavenir.eu</server>
		
		<!--
		Port of the communication server.
		
		Defaults to 5222.
		-->
		<port>5222</port>
		
		<!-- 
		Setting this parameter to true will enable encryption of communication. The policy is to
		try the strongest mechanisms first.
		
		Setting it to false will disable the encryption (not 
		recommended, only for debug purposes). Default is true.  
		-->
		<encryption>false</encryption>
		
		<!--
		Number of seconds to consider request message as no longer relevant. 
		After a request is sent from point A to point B, point A waits for 
		response. If the response does not arrive until this timeout expires, 
		point B is considered unreachable. If the response arrives after this
		happens, the response is ignored and discarded and a new request has
		to be sent.
		
		Default is 60 seconds. 
		-->
		<requestMessageTimeout>60</requestMessageTimeout>
	</general>


	<actions>
		
		<!--
		This parameter sets how long (in minutes) after successful or failed 
		finish a task's return value should be retained. In other words, if a 
		task is finished or failed, its return value will be deleted from the 
		OGWAPI after this number of minutes. This is to prevent the return
		values from piling up in the device's memory.
		
		If not set, it defaults to 1440 minutes (24 hours). 
		-->
		<timeToKeepReturnValues>1440</timeToKeepReturnValues>
		
		
		<!--
		If a task is pending to be run, how long (in minutes) it should remain in the 
		queue before being tagged as failed by timing out. This is infrastructure
		specific - if a task usually takes hours to complete, this value should 
		be set to higher number (maybe even days). If it takes only a few seconds,
		it usually makes no sense to wait for more than an hour. Again, it 
		highly depends on what the action is about and common sense.  
		
		Default value is 120 minutes (2 hours).
		-->
		<pendingTaskTimeout>120</pendingTaskTimeout>
		
		
		<!-- 
		Maximum number of tasks being queued in pending status, waiting to be
		run. This depends on number of objects that are connecting via this 
		gateway, and the memory size of the device it runs on. Setting a 
		limit prevents a malicious object to fill the memory with pending 
		requests. Note that is is a limit per action, so if you have two
		actions that can be executed on you local infrastructure, 
		maximum number of pending tasks will be twice this number.  
		
		Default is 128.  
		-->
		<maxNumberOfPendingTasks>128</maxNumberOfPendingTasks>
		
		
	</actions>

	<logging>
		<!-- 
		Set a relative or absolute (recommended) path to log file. 
		In order to differentiate among multiple log files, a '%s' can be added
		to arbitrary location in the string, which will be replaced by a time
		stamp during start. Each start of the Gateway will produce a new log file
		with a new time stamp.  
		-->
		<file>log/%s-gateway.log</file>
		
		<!--
		Set a log level - messages with severity level lower than this setting 
		will not be recorded. The list of levels in descending order is 
		following:
		
		SEVERE
		WARNING
		INFO
		CONFIG
		FINE
		FINER
		FINEST
		
		It corresponds with the levels used by class java.util.logging.Logger,
		which the Vicinity Gateway utilises for event logging. This value can also
		be set to OFF, which will disable the logging mechanism completely. 
		-->
		<level>FINEST</level>
		
		<!-- 
		Setting this value to 'true' will cause the application to log its output
		to console, aside from logging it into file. This can be useful when 
		debugging the software. 
		
		Setting it to 'false' will suppress this behaviour, instead logging 
		events solely to log file. This is the default behaviour.
		-->
		<consoleOutput>true</consoleOutput>
	</logging>


	<xmpp>
		
		<!--
		XMPP domain that is served by the server. Defaults to bavenir.eu.
		-->
		<domain>bavenir.eu</domain>
		
		<!--
		Enables debugging of the XMPP communication between the Gateway and the
		server / other Gateways. Note that this is to be used in conjunction
		with the SMACK debugger, which is external tool.
		See http://download.igniterealtime.org/smack/docs/latest/documentation/debugging.html.
		
		Default is false.
		-->
		<debugging>false</debugging>
		
	</xmpp>
	
	<api>
		<!--
		Set the port on which the API will be served. If not explicitly set, 
		it defaults to 8181. Be aware that running the software on privileged
		ports (<1024) needs root's privileges. 
		-->
		<port>8181</port>
		
		<!--
		Set whether the API will be served via HTTP or HTTPS. Takes either true
		or false value. Default is true, however in some installations it might
		not be supported.
		-->
		<enableHttps>false</enableHttps>
		
		<!--
		Authentication realm for the RESTLET BEARER authentication schema. It 
		is only taken into account if the authMethod is set to bearer.
		
		Defaults to bavenir.eu.
		-->
		<authRealm>bavenir.eu</authRealm>
		
		<!--
		Authentication method for objects logging into the Gateway API. Following
		methods are valid:
		
		basic	-	Basic HTTP authentication standard.
		
		digest	-	Digest HTTP authentication standard.
		
		bearer	-	Token authentication (JWT/OAuth)
		
		none	-	No authentication. Experimental, for debugging purposes only.
					Without authentication, there is no way of logging into the
					network other than hard coded credentials (or other
					kind of customization).
		
		Defaults to basic.
		
		-->
		<authMethod>basic</authMethod>

	</api>
	
	
	<connector>
		<restAgentConnector>
		
			<!--
			If there is a need to test the OGWAPI responsiveness to external requests
			without making real calls to local REST Agent, setting this parameter 
			to 'true' will make OGWAPI perform only simulated calls.
			
			Defaults to false. 
			-->
			<useDummyCalls>false</useDummyCalls>
			
			<!-- 
			Whether or not the OGWAPI should attempt to use HTTPS to connect to the REST
			Agent.
			
			Defaults to false.
			-->
			<useHttps>false</useHttps>
			
			<!--
			If the REST Agent listens on a different interface (or a different machine),
			it is necessary to set its IP address with this parameter.
			
			Defaults to localhost.
			-->
			<agentIP>localhost</agentIP>
			
			<!-- 
			Port on which the REST Agent listens.
		
			Defaults to 9997.
			-->
			<agentPort>9997</agentPort>
			
		</restAgentConnector>
	
	</connector>
	

</configuration>
